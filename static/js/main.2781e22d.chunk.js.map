{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","placeholder","newText","showAlert","split","length","defaultProps","aboutText","App","setmode","_useState3","_useState4","setalert","message","setTimeout","document","body","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2781e22d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n        </li> */}\r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-light text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode==='light'?'Enable DarkMode' : 'Enable LightMode'}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps={\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to upper case\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lower case\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n\r\n  return (\r\n    <>\r\n    <div className=\"container my-3 px-5\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'black':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\" placeholder=\"Enter your text here\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text</button>\r\n    </div>\r\n    <div className=\"container my-3 px-5\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.08 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter a text to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n \nfunction App() {\n  const [mode, setmode] = useState('light');\n\n  const [alert, setalert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setalert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n\n  }\n\n  const toggleMode = ()=>{\n    if(mode==='light'){\n      setmode('dark');\n      document.body.style.backgroundColor='#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Dark Mode';\n    }else{\n      setmode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = 'TextUtils - Light Mode';\n    }\n\n  }\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n      {/* <Routes>\n          <Route exact path=\"/about\" element={<About/>} />\n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />} />\n      </Routes> */}\n      <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} />\n    </div> \n\n    {/* </Router>   */}\n    \n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}